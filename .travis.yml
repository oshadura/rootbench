#Xenial is still not supported by Travis
#dist: xenial
dist: trusty

sudo: required

language: generic

services:
  - docker

notifications:
  email:
      on_failure: never

cache:
    - apt
    - ccache

matrix:
  include:
    # There seems to be a hard limit to how many machines a Travis build will
    # across all platforms. By interleaving OS X, the hope is to get in the
    # queue faster while not blocking Linux builds from occuring.

    # Coverage
    - env: CXX=g++ CC=gcc BUILD_TYPE=Debug EXTRA_OPTS="-Dcoverage=ON"
    # GCC 5
    - env: CXX=g++ CC=gcc BUILD_TYPE=Debug

    - env: CXX=g++ CC=gcc BUILD_TYPE=Release
    # GCC 6
    - env: CXX=g++-6 CC=gcc-6 BUILD_TYPE=Debug

    - env: CXX=g++-6 CC=gcc-6 BUILD_TYPE=Release
    # Clang 5
    - env: CXX=clang++-5.0 CC=clang-5.0 BUILD_TYPE=Debug

    - env: CXX=clang++-5.0 CC=clang-5.0 BUILD_TYPE=Release


before_install:
  - wget https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
  - sudo dpkg -i cvmfs-release-latest_all.deb
  - sudo apt-get update
  - sudo apt-get install cvmfs cvmfs-config-default
  - rm -f cvmfs-release-latest_all.deb
  - sudo mkdir -p /etc/cvmfs/
  - echo "CVMFS_REPOSITORIES=sft.cern.ch,projects.cern.ch" > default.local
  - echo "CVMFS_HTTP_PROXY=DIRECT" >> default.local
  - sudo mv default.local /etc/cvmfs/
  - sudo /etc/init.d/autofs stop
  - sudo cvmfs_config setup
  - sudo mkdir -p /cvmfs/sft-nightlies.cern.ch
  - sudo mount -t cvmfs sft-nightlies.cern.ch /cvmfs/sft-nightlies.cern.ch
  - ls /cvmfs/sft-nightlies.cern.ch
  - sudo mkdir -p /cvmfs/sft.cern.ch
  - sudo mount -t cvmfs sft.cern.ch /cvmfs/sft.cern.ch
  - ls /cvmfs/sft.cern.ch
# Time to docker
  - docker pull ubuntu:16.04
  - docker run --privileged -d -v $(pwd):/travis/rootbench -v $HOME/.ccache:/root/.ccache -v /cvmfs/sft.cern.ch:/cvmfs/sft.cern.ch -w /travis/rootbench --name xenial ubuntu:16.04 tail -f /dev/null
  - docker exec xenial apt-get update
  - docker exec xenial apt-get -y upgrade
  - docker exec xenial apt-get install -y software-properties-common ccache cmake libtbb-dev wget ruby ruby-dev python curl git unzip g++ libatlas3-base
  - docker exec xenial add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - docker exec xenial add-apt-repository ppa:glasen/freetype2
  - docker exec xenial apt-get install -y freetype2-demos
  - |
    if [ "${CXX}" == "g++-6" ]; then
      docker exec xenial apt-get update
      docker exec xenial apt-get install -y gcc-6 g++-6
    fi
  - |
    if [ "${CXX}" == "clang++-5.0" ]; then
      docker exec xenial apt-get update
      docker exec xenial apt-get install -y clang-5.0
    fi
  - docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && . /travis/rootbench/travis-scripts/before-install.sh"
script:
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && . /travis/rootbench/travis-scripts/rootgcno.sh";
  fi
- docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && export CC=${CC} && export CXX=${CXX} && export BUILD_TYPE=${BUILD_TYPE} && export EXTRA_OPTS=${EXTRA_OPTS} && . /travis/rootbench/travis-scripts/configure.sh"
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && . /travis/rootbench/travis-scripts/lcov-part1.sh";
  fi
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && . /travis/rootbench/travis-scripts/lcov-part2.sh";
  fi
- docker exec -t xenial /bin/bash -c "source /travis/.bashrc && export RB_TEMP_FS=/travis/ && export HOME_FOLDER=/travis/ && cd /travis/build && ctest --output-on-failure -L short"
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && . /travis/rootbench/travis-scripts/lcov-info-part1.sh";
  fi
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && . /travis/rootbench/travis-scripts/lcov-info-part2.sh";
  fi
after_success:
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    docker exec -t xenial /bin/bash -c "export HOME_FOLDER=/travis/ && . /travis/rootbench/travis-scripts/coveralls.sh";
  fi
on_failure:
  -|
   echo "Showing current directory contents"
   ls -la
