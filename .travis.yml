dist: xenial
sudo: required
language: cpp

packages:
    - software-properties-common
    - ccache
    - libtbb-dev
    - wget
    - ruby
    - ruby-dev
    - python
    - curl
    - git
    - unzip
    - g++
    - gfortran
    - libatlas3-base
    - libatlas-base-dev
    - libgsl0-dev
    - libfreetype6-dev
    - davix

notifications:
  email:
      on_failure: never

cache:
    - apt
    - ccache

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-9
      env:
        - COMPILER="gcc-9"
    - compiler: gcc
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-8
      env:
        - COMPILER="gcc-8"
    - compiler: gcc
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-7
      env:
        - COMPILER="gcc-7"
    - compiler: gcc
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-6
      env:
        - COMPILER="gcc-6"
    - compiler: clang
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main"
            key_url: "http://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
          - clang-9
      env:
        - COMPILER="clang-9"
    - compiler: clang
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main"
            key_url: "http://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
          - clang-8
      env:
        - COMPILER="clang-8"
    - compiler: clang
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main"
            key_url: "http://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
          - clang-7
      env:
        - COMPILER="clang-7"
    - compiler: clang
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main"
            key_url: "http://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
          - clang-6.0
      env:
        - COMPILER="clang-6.0"
    - compiler: clang
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main"
            key_url: "http://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
          - clang-5.0
      env:
        - COMPILER="clang-5.0"
    - compiler: clang
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main"
            key_url: "http://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
          - clang-4.0
      env:
        - COMPILER="clang-4.0"
    - compiler: clang
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - clang-3.9
      env:
        - COMPILER="clang-3.9"
    - compiler: gcc-5
      addons:
        apt:
          update: true
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-5
      env:
        - COMPILER="gcc-5"
        - EXTRA_OPTS="-Dcoverage=ON"
    # To be added later when we will have ROOT build in CVMFS
    #- os: osx
    #  osx_image: xcode9.4  # macOS-10.13
    #  compiler: clang
    #  env:
    #    - COMPILER=clang
    #- os: osx
    #  osx_image: xcode10.2  # macOS-10.14
    #  compiler: clang
    #  env:
    #    - COMPILER=clang      
    #- os: osx
    #  osx_image: xcode10.2  # macOS-10.14
    #  compiler: clang
    #  env:
    #    - COMPILER=clang

before_install:
  - wget https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
  - sudo dpkg -i cvmfs-release-latest_all.deb
  - sudo apt-get update
  - sudo apt-get install --allow-unauthenticated cvmfs cvmfs-config-default
  - rm -f cvmfs-release-latest_all.deb
  - sudo mkdir -p /etc/cvmfs/
  - echo "CVMFS_REPOSITORIES=sft.cern.ch,sft-nightlies.cern.ch,projects.cern.ch" > default.local
  - echo "CVMFS_HTTP_PROXY=DIRECT" >> default.local
  - sudo mv default.local /etc/cvmfs/
  - sudo /etc/init.d/autofs stop
  - sudo cvmfs_config setup

  - gem install coveralls-lcov -v 1.5.1
  - gem install lcoveralls

  - wget https://root.cern/download/nightly/root_v6.23.01.Linux-ubuntu16-x86_64-gcc5.4.tar.gz
  - tar xvfz https://root.cern/download/nightly/root_v6.23.01.Linux-ubuntu16-x86_64-gcc5.4.tar.gz 
  
script:
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    . $TRAVIS_BUILD_DIR/.travis/lcov/rootgcno.sh;
  fi
- . $TRAVIS_BUILD_DIR/.travis/configure.sh
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    . $TRAVIS_BUILD_DIR/.travis/lcov/lcov-part1.sh;
  fi
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    . $TRAVIS_BUILD_DIR/.travis/lcov/lcov-part2.sh;
  fi
- export RB_TEMP_FS=${HOME} && cd $HOME/build && ctest --output-on-failure -L short
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    . $TRAVIS_BUILD_DIR/.travis/lcov/lcov-info-part1.sh;
  fi
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    . $TRAVIS_BUILD_DIR/.travis/lcov/lcov-info-part2.sh;
  fi
after_success:
- |
  if [ "${EXTRA_OPTS}" == "-Dcoverage=ON" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
    . $TRAVIS_BUILD_DIR/.travis/lcov/coveralls.sh;
  fi
on_failure:
  -|
   echo "Showing current directory contents"
   ls -la
